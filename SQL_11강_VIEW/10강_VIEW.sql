
--알아두는 정도, 데이터를 편하게 보기위함
--뷰 VIEW
SELECT * FROM EMP_DETAILS_VIEW;

--자주 사용하는 컬럼을 지정하면 편함
-- 뷰는 원본 테이블을 기준으로 한 가상테이블

SELECT * FROM USER_ROLE_PRIVS;
-- VIEW를 만들때는 권한이 필요하다

SELECT * FROM USER_SYS_PRIVS;


--단순뷰, 하나의 테이블로 생성된 뷰
CREATE OR REPLACE VIEW VIEW_EMP
AS (
    SELECT EMPLOYEE_ID AS EMP_ID,
        FIRST_NAME ||' '|| LAST_NAME AS NAME,
        JOB_ID,
        SALARY
    FROM EMPLOYEES
    WHERE DEPARTMENT_ID = 60
);

SELECT * FROM VIEW_EMP;

--복합뷰, 두개이상의 테이블로 생성된 뷰
CREATE OR REPLACE VIEW VIEW_EMP_JOB
AS (
    SELECT E.EMPLOYEE_ID,
        FIRST_NAME,
        J.JOB_TITLE,
        D.DEPARTMENT_ID
    FROM EMPLOYEES E
    JOIN DEPARTMENTS D
    ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
    LEFT JOIN JOBS J
    ON E.JOB_ID = J.JOB_ID
);

SELECT * FROM VIEW_EMP_JOB;
SELECT JOB_TITLE, COUNT(*) AS 사원수
FROM VIEW_EMP_JOB
GROUP BY JOB_TITLE;

SELECT E.EMPLOYEE_ID,
        FIRST_NAME,
        J.JON_TITLE,
        D.DEPARTMENT_ID
FROM EMPLOYEES E
JOIN DEPARTMENTS D
ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
LEFR JOIN JOBS J
ON E.JOBS_ID = D.JOBS_ID;

--뷰의 수정
CREATE OR REPLACE VIEW VIEW_EMP_JOB
AS (
    SELECT E.EMPLOYEE_ID,
        FIRST_NAME,
        J.JOB_TITLE,
        J.MIN_SALARY, --뷰의 수정
        D.DEPARTMENT_ID
    FROM EMPLOYEES E
    JOIN DEPARTMENTS D
    ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
    LEFT JOIN JOBS J
    ON E.JOB_ID = J.JOB_ID
);

--뷰의 삭제
DROP VIEW VIEW_EMP_JOB;
ROLLBACK;
SELECT * FROM VIEW_EMP_JOB;


--단순뷰는 INSERT, UPDATE 가 가능하지만 제약사항이 있다
SELECT * FROM VIEW_EMP;

--NAME, EMP_ID가 가상열이여서 INSERT가 되지 않음
INSERT INTO VIEW_EMP VALUES(108, 'APPLE', 'IT_PTOG', 10000);

INSERT INTO VIEW_EMP(JOB_ID, SALARY) VALUES('IT_PTOG', 10000);
--원본테이블에 NOT NULL제약에 위배되어 삽입 안 됨

--뷰의 옵션
--WITH CHECK OPTION, 특정 컬럼 값을 바꾸지 못하게 하는 옵션
--WITH READ ONLY, SELECT만 가능 - 읽기 전용

CREATE OR REPLACE VIEW VIEW_EMP
AS(
    SELECT EMPLOYEE_ID,
        FIRST_NAME,
        EMAIL,
        JOB_ID,
        DEPARTMENT_ID
    FROM EMPLOYEES
    WHERE DEPARTMENT_ID IN(10,20,30)
) WITH CHECK OPTION /*WITH READ ONLY*/
;

UPDATE VIEW_EMP SET DEPARTMENT_ID = 50 WHERE EMPLOYEE_ID = 103;

--인라인 뷰가 가상테이블
SELECT *
FROM (
    SELECT EMPLOYEE_ID,
        FIRST_NAME,
        EMAIL,
        JOB_ID,
        DEPARTMENT_ID
    FROM EMPLOYEES
    WHERE DEPARTMENT_ID IN(10,20,30)
);





