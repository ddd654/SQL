
--테이블 구조 확인
DESC DEPARTMENTS;

--행 삽입하기
INSERT INTO DEPARTMENTS VALUES(280, 'DEVELOPER', NULL, 1700); --이거랑
SELECT * FROM DEPARTMENTS;
--실제로 반영된 것은 아님

ROLLBACK; --되돌리기

--컬럼명을 지정해서 삽입하기
INSERT INTO DEPARTMENTS(DEPARTMENT_ID, DEPARTMENT_NAME, LOCATION_ID) VALUES(280, 'DEVELOPER', 1700); --이거만

--INSERT 구문도 서브쿼리가 됩, 많이 사용안함
INSERT INTO DEPARTMENTS(DEPARTMENT_ID, DEPARTMENT_NAME) VALUES((SELECT MAX(DEPARTMENT_ID) + 10 FROM DEPARTMENTS), 'DEV');
ROLLBACK; --되돌리기

--INSERT 구문 서브쿼리, 여러행
CREATE TABLE EMPS AS (SELECT * FROM EMPLOYEES WHERE 1 = 2);

SELECT * FROM EMPS; -- 이 테이블에 원본테이블의 특정 테이터를 퍼다 나름

DESC EMPS;

INSERT INTO EMPS(EMPLOYEE_ID, LAST_NAME, EMAIL, HIRE_DATE, JOB_ID)
(SELECT EMPLOYEE_ID, LAST_NAME, EMAIL, HIRE_DATE, JOB_ID FROM EMPLOYEES WHERE JOB_ID = 'SA_MAN');

COMMIT; --위에서 삽입한거 확정하기

-----------------
--UPDATE
SELECT * FROM EMPS; --현재 테이블 보기

UPDATE EMPS SET SALARY = 1000, COMMISSION_PCT =0.1 WHERE EMPLOYEE_ID = 140; --5행 다바뀜 >> WHERE 조건 필수
ROLLBACK;

UPDATE EMPS SET SALARY = NVL(SALARY, 0) + 2000 WHERE EMPLOYEE_ID >= 145;
--데이터가 많아지니 WHERE 조건과 SELECT문 확인
--

--UPDATE 구문의 서브쿼리
-- 1ST ,단일형 서브쿼리
UPDATE EMPS SET SALARY 
= (SELECT SALARY FROM EMPLOYEES WHERE EMPLOYEE_ID = 100) 
WHERE EMPLOYEE_ID = 148;

--2ND, 여러값 서브쿼리
UPDATE EMPS
SET (SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID) -- 여기로 업데이트
= (SELECT SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID FROM EMPLOYEES WHERE EMPLOYEE_ID = 100) --이 값들을
WHERE EMPLOYEE_ID = 148; --148인

--3ND, WHERE 서브쿼리
UPDATE EMPS
SET SALARY = 3000
WHERE EMPLOYEE_ID IN (SELECT EMPLOYEE_ID FROM EMPLOYEES WHERE JOB_ID = 'IT_PROG');
SELECT * FROM EMPS; --현재 테이블 보기

-----------------
--

--DELETE
--행 삭제는 실행하기전에 SELECT 확인하기
SELECT * FROM EMPS WHERE EMPLOYEE_ID = 148;

DELETE FROM EMPS WHERE EMPLOYEE_ID = 148;
SELECT * FROM EMPS;

--DELETE 서브쿼리
DELETE FROM EMPS 
WHERE EMPLOYEE_ID = (SELECT EMPLOYEE_ID FROM EMPLOYEES WHERE DEPARTMENT_ID = 80);

SELECT EMPLOYEE_ID FROM EMPLOYEES WHERE DEPARTMENT_ID = 80;
SELECT EMPLOYEE_ID FROM EMPLOYEES;
ROLLBACK;

------------------
--참조 무결성 제약
--테이블의 연관관계(PK) 제약을 가지고 있다면, 지워지지 않는다

SELECT * FROM EMPLOYEES;
SELECT * FROM DEPARTMENTS;

DELETE FROM DEPARTMENTS WHERE DEPARTMENT_ID = 100; -- EMPLOYEES의 DEPARTMENT_ID가 PK로 되어있어 DEPARTMENTS 것이 지워지지 않는다


--------------------
--MERGE 
--타겟테이블 데이터가 있으면  UPDATE, 없으면 INSERT
MERGE INTO KMPS A
USING (SUBQUERY)
ON (KEY)
WHEN MATCHED THEN

WHEN NOT MATCHED THEN;

SELECT * FROM EMPLOYEES WHERE JOB_ID = 'IT_PROG';

MERGE INTO EMPS A
USING (SELECT * FROM EMPLOYEES WHERE JOB_ID = 'IT_PROG') B --연결할 테이블 
ON (A.EMPLOYEE_ID = B.EMPLOYEE_ID)--연결할 키
WHEN MATCHED THEN --일치하는 경우
    UPDATE SET A.SALARY = B.SALARY,
                A.COMMISSION_PCT = B.COMMISSION_PCT,
                A.HIRE_DATE = SYSDATE
                --....계속
WHEN NOT MATCHED THEN --일치하지않는 경우
    INSERT /*INTO*/ (LAST_NAME, EMAIL, HIRE_DATE, JOB_ID) 
    VALUES (B.LAST_NAME, B.EMAIL,B.HIRE_DATE, B.JOB_ID);

SELECT * FROM EMPS;
ROLLBACK;

-----------------------
--2ND, 직접 값을 넣을 때 DUAL을 사용할 수도 있다
SELECT * FROM EMPLOYEES;

SELECT * FROM EMPS;

MERGE INTO EMPS A
USING DUAL
ON (A.EMPLOYEE_ID = 107) --조건
WHEN MATCHED THEN
    UPDATE SET A.SALARY = 10000, A.COMMISSION_PCT = 0.1, A.DEPARTMENT_ID = 100
WHEN NOT MATCHED THE
    INSERT (EMPLOYEE_ID, LAST_NAME, EMAIL, HIRE_DATE, JOB_ID)
    VALUES (107, 'HONG', 'SAMPLE', SYSDATE, 'DBA');
    
SELECT * FROM EMPS;

--CTAS --넘어가자
DROP TABLE EMPS;

SELECT * FROM EMPS;
ROLLBACK;


CREATE TABLE KMPS AS (SELECT * FROM EMPLOYEES); --데이터 복사
SELECT * FROM KMPS;

CREATE TABLE KMPS AS (SELECT * FROM EMPLOYEES WHERE 1=2);


---------





















