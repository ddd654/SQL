
--제약조건
-- 컬럼에서 데이터 수정, 삭제, 삽입 등 이상을 방지하기 위한 조건

--PTIMARY KEY, PK - 중복 없음, NULL 없음, 테이블에서 1개
--NOT NULL - NULL을 허용하지 않음
--UNIQUE KEY -중복 없고 널 허용
--FOREIGN KEY, FK - 참조하는 테이블의 PK를 넣어놓은 키, 중복 널 허용
--CHECK - 칼럼에서 데이터 제한

--재약조건 확인
SELECT * FROM USER_CONSTRAINTS;

DROP TABLE DEPTS;

--
CREATE TABLE DEPTS(
    DEPT_NO NUMBER(2) CONSTRAINT DEPTS_DEPT_NO_PK PRIMARY KEY,
    DEPT_NAME VARCHAR2(30) CONSTRAINT DEPTS_DEPT_NAME_NN NOT NULL,
    DEPT_DATE DATE DEFAULT SYSDATE, -- 제약조건은 아님
    DEPT_PHONE VARCHAR2(30) CONSTRAINT DEPTS_DEPT_PHONE_UK UNIQUE,
    DEPT_GENDER CHAR(1) CONSTRAINT DEPTS_DPET_GENDER_CK CHECK(/*CONDITION*/DEPT_GENDER IN ('F', 'M')),
    LOCA_ID NUMBER(4) CONSTRAINT DEPTS_DEPT_ID_FK REFERENCES LOCATIONS(LOCATION_ID)
    );
    
SELECT * FROM DEPTS;
    
INSERT INTO DEPTS(DEPT_NO, DEPT_NAME, DEPT_PHONE, DEPT_GENDER, LOCA_ID)
VALUES(1, NULL, '010...', 'F', 1700);    --NOT NULL 제약 위배

INSERT INTO DEPTS(DEPT_NO, DEPT_NAME, DEPT_PHONE, DEPT_GENDER, LOCA_ID)
VALUES(1, NULL, '010...', 'X', 1700);   --CHECK 제약 위배

INSERT INTO DEPTS(DEPT_NO, DEPT_NAME, DEPT_PHONE, DEPT_GENDER, LOCA_ID)
VALUES(1, 'APP', '010...', 'X', 100);   --참조 제약 위배

INSERT INTO DEPTS(DEPT_NO, DEPT_NAME, DEPT_PHONE, DEPT_GENDER, LOCA_ID)
VALUES(1, 'APP', '010...', 'F', 1700);  -- 삽입 성공

INSERT INTO DEPTS(DEPT_NO, DEPT_NAME, DEPT_PHONE, DEPT_GENDER, LOCA_ID)
VALUES(1, 'APP', '010...', 'F', 1700);  -- 유니크 위배

----------------------
--2ND
DROP TABLE DEPTS;

CREATE TABLE DEPTS(
    DEPT_NO NUMBER(2),
    DEPT_NAME VARCHAR2(30) NOT NULL,
    DEPT_DATEDATE DATE DEFAULT SYSDATE,
    DEPT_PHONE VARCHAR2(30),
    DEPT_GENDER CHAR(1),
    LOCA_ID NUMBER(4)
    CONSTRAINT DEPT_DEPT_NO_PK PRIMARY KEY(DEPT_MO, DEPT_NAME),
    CONSTRAINT DEPT_DEPT_PHONE_UK UNIQUE( DEPT_PHONE),
    CONSTRAINT DEPT_DEPT_NO_PK CHECK( DEPT_GENDER IN ('E', 'N')),
    CONSTRAINT DEPT_LOCA_ID_FK FOREIGN KEY (LOCA_ID) REFERENCES LOCATIONS(LOCATION_ID)
    
    );
--CREATE TABLE DEPTS (
--    DEPT_NO NUMBER(2),
--    DEPT_NAME VARCHAR2(30) NOT NULL,
--    DEPT_DATE DATE DEFAULT SYSDATE,
--    DEPT_PHONE VARCHAR2(30),
--    DEPT_GENDER CHAR(1) CHECK (DEPT_GENDER IN ('M', 'F')),
--    LOCA_ID NUMBER(4),
--    CONSTRAINT DEPTS_DEPT_NO_PK PRIMARY KEY (DEPT_NO, DEPT_NAME),
--    CONSTRAINT DEPTS_DEPT_PHONE_UK UNIQUE (DEPT_PHONE),
--    CONSTRAINT DEPTS_LOCA_ID_FK FOREIGN KEY (LOCA_ID) REFERENCES LOCATIONS(LOCATION_ID)
--);

------------------
DELETE TABLE DEPTS(
    DEPT_NO NUMBER(2),
    DEPT_NAME VARCHAR2(30) NOT NULL,
    DEPT_DATEDATE DATE DEFAULT SYSDATE,
    DEPT_PHONE VARCHAR2(30),
    DEPT_GENDER CHAR(1),
    LOCA_ID NUMBER(4)
);

--PK 추가
ALTER TABLE DEPTS ADD CONSTRAINT DEPT_DEPT_NO_PK PRIMARY KEY (DEPT_NO);

--NOT NULL은 MODIFY로 추가
ALTER TABLE DEPTS MODIFY DEPT_NAME VARCHAR2(30) NOT NULL;
-- UNIQUE
ALTER TABLE DEPTS ADD CONSTRAINT DEPT_DEPT_PHONE_UK UNIQUE (DEPT_PHONE);
-- FK
ALTER TABLE DEPTS ADD CONSTRAINT DEPT_LOCA_ID_FK FOREING KEY (LOCA_ID) REFERENCES LOCATION(LOCATION_ID);
-- CHECK
ALTER TABLE DEPTS ADD CONSTRAINT DEPT_LOCA_CHECK_CK CHECK (DEPT_GENDER) IN ('Y', 'E');

--제약 삭제
ALTER TABLE DEPTS ADD CONSTRAINT DEPT_LOCA_CHECK_CK;


------테이블 편집에서 제약 추가, 관리 할 수 있음



--문제1.
--다음과 같은 테이블을 생성하고 데이터를 insert해보세요.
--테이블 제약조건은 아래와 같습니다. 
--조건) M_NAME 는 가변문자형 20byte, 널값을 허용하지 않음
--조건) M_NUM 은 숫자형 5자리, PRIMARY KEY 이름(mem_memnum_pk) 
--조건) REG_DATE 는 날짜형, 널값을 허용하지 않음, UNIQUE KEY 이름:(mem_regdate_uk)
--조건) GENDER 고정문자형 1byte, CHECK제약 (M, F)
--조건) LOCA 숫자형 4자리, FOREIGN KEY – 참조 locations테이블(location_id)
--이름:(mem_loca_loc_locid_fk)

CREATE TABLE QUIZ(
    M_NAME VARCHAR2(20) NOT NULL,
    M_NUM NUMBER(5) CONSTRAINT MEM_MEMNUM_PK PRIMARY KEY,
    REG_DATE DATE NOT NULL CONSTRAINT MEM_REGDATE_UK UNIQUE,
    GENDER CHAR(1) CONSTRAINT MEM_CHECK_CK CHECK(GENDER IN('M', 'F')),
    LOCA NUMBER(4) CONSTRAINT MEM_LOCA_FK REFERENCES LOCATIONS(LOCATION_ID)
);

SELECT * FROM QUIZ;
ROLLBACK;

SELECT TO_CHAR(TO_DATE(240613, 'YYMMDD'), 'YYYY-MM-DD') FROM DUAL;


INSERT INTO QUIZ VALUES('AAA', 1, TO_CHAR(TO_DATE(180701, 'YYMMDD'), 'YYYY-MM-DD'), 'M', 1800);
INSERT INTO QUIZ VALUES('BBB', 2, '2018-07-02', 'F', 1900);
INSERT INTO QUIZ VALUES('CCC', 3, '2018-07-03', 'M', 2000);
INSERT INTO QUIZ VALUES('DDD', 4, SYSDATE, 'M', 2100);


--문제2.
--도서 대여 이력 테이블을 생성하려 합니다.
--도서 대여 이력 테이블은
--대여번호(숫자) PK, 대출도서번호(문자), 대여일(날짜), 반납일(날짜), 반납여부(Y/N)
--를 가집니다.
--적절한 테이블을 생성해 보세요.

CREATE TABLE BOOK(
    BOOK_NUM NUMBER(5) CONSTRAINT BOOK_PK PRIMARY KEY,
    BOOK_ID VARCHAR(30) CONSTRAINT BOOK_ID NOT NULL,
    BOOK_DAY DATE DEFAULT SYSDATE,
    END_DAY DATE,
    BOOK_RETURN CHAR(1) CONSTRAINT BOOK_CH CHECK (BOOK_RETURN IN('Y','N'))
);

SELECT * FROM BOOK;
ROLLBACK;

CREATE TABLE DEPTS(
    DEPT_NO NUMBER(2) CONSTRAINT DEPTS_DEPT_NO_PK PRIMARY KEY,
    DEPT_NAME VARCHAR2(30) CONSTRAINT DEPTS_DEPT_NAME_NN NOT NULL,
    DEPT_DATE DATE DEFAULT SYSDATE, -- 제약조건은 아님
    DEPT_PHONE VARCHAR2(30) CONSTRAINT DEPTS_DEPT_PHONE_UK UNIQUE,
    DEPT_GENDER CHAR(1) CONSTRAINT DEPTS_DPET_GENDER_CK CHECK(/*CONDITION*/DEPT_GENDER IN ('F', 'M')),
    LOCA_ID NUMBER(4) CONSTRAINT DEPTS_DEPT_ID_FK REFERENCES LOCATIONS(LOCATION_ID)
    );















